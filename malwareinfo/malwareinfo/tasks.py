import os
from os import listdir, path
from os.path import isdir

from celery.decorators import periodic_task, task
from celery.task.schedules import crontab
from celery.utils.log import get_task_logger

from django.conf import settings

from .virustotal import VirusTotalAPI
from .models import ScanRequest, PendingRequest

@periodic_task(run_every=(crontab(minute='*/15')), name="add_pending_request", ignore_result=True)
def add_pending_request():
  MAX_ADDS = 256
  adds_counter = 0
  filenames = [f.split('_')[0] for f in listdir(settings.DATA_PATH) if isdir(path.join(settings.DATA_PATH, f))]
  for f in filenames:
    if adds_counter >= MAX_ADDS:
      return
    file_path = path.join(settings.SAMPLES_PATH, f)
    if PendingRequest.objects.filter(malware_path=file_path).first() is None:
      p = PendingRequest(malware_path=file_path)
      p.save()
      adds_counter += 1


@periodic_task(run_every=(crontab(minute='*/1')), name="request_scan_and_report_task", ignore_result=True)
def request_scan_and_report_task():
  requestno = 0
  for _ in range(VirusTotalAPI.SCANS_PER_SECOND):
    VirusTotalAPI.request_scan()
    requestno += 1
  
  s = ScanRequest.objects.first()
  while(ScanRequest.objects.first() is not None and requestno < VirusTotalAPI.MAX_REQ_PER_MINUTE):
    VirusTotalAPI.request_report()
    requestno += 1
  
  while requestno < VirusTotalAPI.MAX_REQ_PER_MINUTE:
    VirusTotalAPI.request_scan()
    requestno += 1

    
  